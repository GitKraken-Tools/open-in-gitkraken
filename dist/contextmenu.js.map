{"version":3,"sources":["../src/contextmenu.ts"],"sourcesContent":["import {\n  isRepoHome,\n  isRepoRoot,\n  isCommit,\n  isSingleTag,\n  utils,\n} from 'github-url-detection';\n\nimport { getFirstCommit } from '.';\n\nconst { getRepositoryInfo: getRepo } = utils;\n\nconst isBranch = (url) => {\n  return !isRepoHome(url) && isRepoRoot(url);\n}\n\nconst prefix = 'gitkraken://repolink/';\nconst firstCommit = 'first_commit_here';\nconst suffix = `?url=${encodeURIComponent((document.querySelector('meta[name=\"go-import\"]') as HTMLMetaElement)?.content.split(' ')[2])}`;\n\nconst linkFormats = {\n  repo: `${prefix}${firstCommit}?url=${suffix}`,\n  commit: (commit) => `${prefix}${firstCommit}/commit/${commit}?url=${suffix}`,\n  branch: (branch) => `${prefix}${firstCommit}/branch/${branch}?url=${suffix}`,\n  tag: (tag) => `${prefix}${firstCommit}/tag/${tag}?url=${suffix}`,\n};\n\nconst buildLink = (url: URL | Location | HTMLAnchorElement | undefined) => {\n  const { repo, commit, branch, tag } = linkFormats;\n  const info = getRepo(url ?? location);\n  let link = repo;\n  if (info && !isRepoHome(url)) {\n    const { path } = info;\n    const builder = (fn: (_: any) => string, splitter: string | RegExp) => {\n      return fn(path.split(splitter)[1].split(/\\/|\\?/)[0]);\n    };\n    if (isBranch(url)) link = builder(branch, '/tree/');\n    else if (isCommit(url)) link = builder(commit, /\\/commit.*?\\//);\n    else if (isSingleTag(url)) link = builder(tag, '/tag/');\n  }\n  return link;\n};\n\nasync function getCurrentTab() {\n    const queryOptions = { active: true, lastFocusedWindow: true };\n    const [tab] = await chrome.tabs.query(queryOptions);\n    return tab;\n}\n\nfunction injectedAlert(message) {\n    // eslint-disable-next-line no-undef\n    alert(message);\n}\n\nfunction injectedWindowOpen(url) {\n    // eslint-disable-next-line no-undef\n    window.open(url);\n}\n\nasync function openInGk({ linkUrl, pageUrl }) {\n    let tab;\n    try {\n        tab = await getCurrentTab();\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unexpected error');\n        // eslint-disable-next-line no-console\n        console.error(e);\n        return;\n    }\n\n    try {\n        const parsedLinkData = new URL(linkUrl ?? pageUrl);\n        const url = buildLink(parsedLinkData);\n        await chrome.scripting.executeScript(\n            {\n                target: { tabId: tab.id },\n                func: injectedWindowOpen,\n                args: [url],\n            },\n        );\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        await chrome.scripting.executeScript(\n            {\n                target: { tabId: tab.id },\n                func: injectedAlert,\n                args: [e.message ?? e],\n            },\n        );\n        if (e.name === 'OptionValidationError') {\n            chrome.runtime.openOptionsPage();\n        }\n    }\n}\n\nconst contextMenuId = 'open-in-gk-context-menu';\n\nchrome.contextMenus.create({\n    id: contextMenuId,\n    title: 'Open in VSCode',\n    contexts: ['link', 'page'],\n});\n\nchrome.contextMenus.onClicked.addListener(({ menuItemId, ...info }) => {\n    if (menuItemId !== contextMenuId) return;\n    const { linkUrl, pageUrl } = info;\n    openInGk({ linkUrl, pageUrl });\n});\n\nchrome.action.onClicked.addListener((({ url }) => {\n    openInGk({ linkUrl: url, pageUrl: url });\n}));"],"mappings":"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","names":[]}